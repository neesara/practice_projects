Robot - to be noted
Key-word driven, behaviour driven and data driven
Testcases are written using keyword style in a tabular format
Robot integrated development environment - RIDE


Git :

git fork is like adding the project to your account so that u can access it easily
git checkout is moving to a branch and it is like creating a local checkpoint(technically called reference)
git checkout -b is creating a branch and moving to that branch
commit - save checkpoint
Commits are a particular type of checkpoint called a revision. The name will be a random-looking hash of numbers and letters such as e093542.
That’s really the core function of git: To save checkpoints (revisions) and share them with other people. Everything revolves around this concept.
If you’ve ever created a checkpoint to something, you’ll be able to get back to it later as long as your .git folder is intact. It’s magical.
 You can use the -m flag as a shortcut to write a message. For example:

git commit -m “Add a new feature”
Push your branch to upload it somewhere else:
git push origin <branch-name> => this will push ur branch as a new branch in git, you can merge it to master or some other repo with a PR

****In Git, "origin" is a shorthand name for the remote repository that a project was originally cloned from. More precisely, it is used instead of that original repository's URL - and thereby makes referencing much easier.

git push origin master => Here origin represents the repository and master represents the branch
git pull origin dev_branch => Pull changes from dev_branch to the current local branch
for ur info : pull is fetch + merge, fetch will only fetch and store, it will not update to local branch, merge merges it
Syntax of fetch :
git fetch origin master  => here from origin repo master branch will be fetched
git merge master => Here is master is the (remote)branch from which you are merging the updates to local branch in which you currently at in your local system.
**Pro tip : Usually git commands deal with 2 targets, local and remote. Local target is where you are at when you issue the command(eg the branch where you are at when you execute the command from git bash). Since you are at it no need to mention it explicitly in a command, it is understood. The remote target is what you need to specify explicitly in the command.

git remote -v
Upstream is needed for forking usually. Refer : https://www.atlassian.com/git/tutorials/git-forks-and-upstreams

**Pro tip :
Basic git flow in normal work related needs :
-------------------------
git clone --branch the_source_branch my_git_url.git
git status
git checkout -b my_branch   ==> this will create a new branch for you to make changes
##Make your changes in the files
git add .
git status
git commit -m "Message which explains your change"
git push origin my_branch
##After this you can go to your get web url and the create pull request (PR). ==> Need to see whether you can do this from CLI

Merge conflicts :
When you get merge conflicts manually edit the file and then push it again.

Python venv
In python3 it is python -m venv <path>
Activate :
<path>/Scripts/activate.bat or source <path>/Scripts/activate.bat for bash

Deactivate :
just type deactivate

The folder has :
bin: files that interact with the virtual environment
include: C headers that compile the Python packages
lib: a copy of the Python version along with a site-packages folder where each dependency is installed

Learning links :
https://www.katacoda.com/  - For docker, Kubernetics, Git, Jenkins
Jupyter notebook - For python
https://www.youtube.com/playlist?list=PL6tu16kXT9PpKXQADb8AyJ1zHyp7xDHHo  - Kubernetes for Testers
https://www.docker.com/blog/intro-guide-to-dockerfile-best-practices/
https://cdk8s.io/ - Kubernetics

Shell, grep :

Grep N lines after a match
grep -A <N> "string" FILENAME
Here A is after and use B for before
Use options -B <no. of lines> -A <no. of lines> to print that many lines before or after the matching pattern.

***find  with rm for deleting logs older than 1 day***

find . -name '*.log' -mtime +1 -exec rm {} \;







